diff --git a/src/services/bigquery_service.py b/src/services/bigquery_service.py
--- a/src/services/bigquery_service.py
+++ b/src/services/bigquery_service.py
@@ -1,20 +1,28 @@
 import os
 
 class BigQueryService:
     def __init__(self):
-            self.project_id = os.getenv("GCP_PROJECT_ID", "ra-autohaus-tracker")
+            # Prefer PROJECT_ID; keep GCP_PROJECT_ID as backward-compatible fallback;
+            # final fallback helps local runs without .env
+            self.project_id = (
+                os.getenv("PROJECT_ID")
+                or os.getenv("GCP_PROJECT_ID")
+                or "ra-autohaus-tracker"
+            )
 
         # ... keep other initializations as they are
 
diff --git a/common.sh b/common.sh
--- a/common.sh
+++ b/common.sh
@@ -1,200 +1,204 @@
 #!/usr/bin/env bash
 set -Eeuo pipefail
 IFS=$'\n\t'
 trap 'echo "‚ùå ${BASH_SOURCE[0]}:$LINENO: $BASH_COMMAND" >&2' ERR
 
 # Load .env if present
 if [[ -f "$(dirname "$0")/../.env" ]]; then
   set -a
   # shellcheck disable=SC1091
   source "$(dirname "$0")/../.env"
   set +a
 elif [[ -f ".env" ]]; then
   set -a
   # shellcheck disable=SC1091
   source ".env"
   set +a
 fi
 
 : "${PROJECT_ID:?PROJECT_ID required}"
 : "${REGION:=europe-west3}"
 : "${SERVICE_NAME:?SERVICE_NAME required}"
 : "${REPO:=apps}"
 : "${TAG:=latest}"
 : "${ENVIRONMENT:=dev}"
 
 IMAGE_URI="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO}/${SERVICE_NAME}"
+
+# Backward compatibility for legacy code that still expects GCP_PROJECT_ID
+export GCP_PROJECT_ID="${PROJECT_ID}"
 
 check_cmd() {
   command -v "$1" >/dev/null 2>&1 || { echo "‚ùå '$1' ist nicht installiert oder nicht im PATH"; exit 1; }
 }
 
diff --git a/cloudbuild.ar.yaml b/cloudbuild.ar.yaml
new file mode 100644
--- /dev/null
+++ b/cloudbuild.ar.yaml
@@ -0,0 +1,49 @@
+# Cloud Build using Artifact Registry
+# Ausf√ºhren z.B.:
+# gcloud builds submit --config cloudbuild.ar.yaml --substitutions=_TAG=ci-$(date +%Y%m%d%H%M%S)
+
+substitutions:
+  _REGION: 'europe-west3'
+  _PROJECT_ID: '$PROJECT_ID'     # von Cloud Build gesetzt
+  _REPO: 'apps'
+  _SERVICE_NAME: 'ra-autohaus-tracker'
+  _TAG: 'ci-${SHORT_SHA}'
+  _IMAGE_URI: '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_SERVICE_NAME}'
+  _ENVIRONMENT: 'production'
+
+steps:
+  - name: 'gcr.io/cloud-builders/docker'
+    args: ['build', '-t', '${_IMAGE_URI}:${_TAG}', '.']
+
+  - name: 'gcr.io/cloud-builders/docker'
+    args: ['push', '${_IMAGE_URI}:${_TAG}']
+
+  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
+    entrypoint: gcloud
+    args:
+      - run
+      - deploy
+      - '${_SERVICE_NAME}'
+      - '--image=${_IMAGE_URI}:${_TAG}'
+      - '--region=${_REGION}'
+      - '--allow-unauthenticated'
+      - '--set-env-vars=ENVIRONMENT=${_ENVIRONMENT},PROJECT_ID=${_PROJECT_ID},REGION=${_REGION},SERVICE_NAME=${_SERVICE_NAME},GCP_PROJECT_ID=${_PROJECT_ID}'
+
+images:
+  - '${_IMAGE_URI}:${_TAG}'
+
+options:
+  logging: CLOUD_LOGGING_ONLY
diff --git a/scripts/setup_bigquery_dynamic.sh b/scripts/setup_bigquery_dynamic.sh
new file mode 100755
--- /dev/null
+++ b/scripts/setup_bigquery_dynamic.sh
@@ -0,0 +1,27 @@
+#!/usr/bin/env bash
+set -Eeuo pipefail
+IFS=$'\n\t'
+
+DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
+# shellcheck source=../common.sh
+source "$DIR/../common.sh"
+
+check_cmd bq
+
+echo "üõ†  BigQuery setup"
+echo "Project: ${PROJECT_ID}"
+echo "Region : ${REGION}"
+
+# Dataset (idempotent)
+bq --location="${REGION}" --project_id="${PROJECT_ID}" \
+   mk -d --default_table_expiration 0 autohaus || true
+
+echo "‚úÖ BigQuery setup completed"
